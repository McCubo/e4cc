<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Grade', 'doctrine');

/**
 * BaseGrade
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $question_id
 * @property integer $evaluation_id
 * @property float $grade_score
 * @property string $question_comment
 * @property Evaluation $Evaluation
 * @property Question $Question
 * @property Doctrine_Collection $AdditionalComments
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getQuestionId()         Returns the current record's "question_id" value
 * @method integer             getEvaluationId()       Returns the current record's "evaluation_id" value
 * @method float               getGradeScore()         Returns the current record's "grade_score" value
 * @method string              getQuestionComment()    Returns the current record's "question_comment" value
 * @method Evaluation          getEvaluation()         Returns the current record's "Evaluation" value
 * @method Question            getQuestion()           Returns the current record's "Question" value
 * @method Doctrine_Collection getAdditionalComments() Returns the current record's "AdditionalComments" collection
 * @method Grade               setId()                 Sets the current record's "id" value
 * @method Grade               setQuestionId()         Sets the current record's "question_id" value
 * @method Grade               setEvaluationId()       Sets the current record's "evaluation_id" value
 * @method Grade               setGradeScore()         Sets the current record's "grade_score" value
 * @method Grade               setQuestionComment()    Sets the current record's "question_comment" value
 * @method Grade               setEvaluation()         Sets the current record's "Evaluation" value
 * @method Grade               setQuestion()           Sets the current record's "Question" value
 * @method Grade               setAdditionalComments() Sets the current record's "AdditionalComments" collection
 * 
 * @package    e4cc
 * @subpackage model
 * @author     jorgezfx@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGrade extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('grade');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('question_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('evaluation_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('grade_score', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('question_comment', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Evaluation', array(
             'local' => 'evaluation_id',
             'foreign' => 'id'));

        $this->hasOne('Question', array(
             'local' => 'question_id',
             'foreign' => 'id'));

        $this->hasMany('AdditionalComments', array(
             'local' => 'id',
             'foreign' => 'grade_id'));
    }
}