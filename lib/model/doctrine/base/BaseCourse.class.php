<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Course', 'doctrine');

/**
 * BaseCourse
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $level_id
 * @property integer $user_id
 * @property integer $class_room_id
 * @property integer $schedule_id
 * @property string $course_name
 * @property integer $is_active
 * @property ClassRoom $ClassRoom
 * @property Level $Level
 * @property Schedule $Schedule
 * @property User $User
 * @property Doctrine_Collection $Inscription
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method integer             getLevelId()       Returns the current record's "level_id" value
 * @method integer             getUserId()        Returns the current record's "user_id" value
 * @method integer             getClassRoomId()   Returns the current record's "class_room_id" value
 * @method integer             getScheduleId()    Returns the current record's "schedule_id" value
 * @method string              getCourseName()    Returns the current record's "course_name" value
 * @method integer             getIsActive()      Returns the current record's "is_active" value
 * @method ClassRoom           getClassRoom()     Returns the current record's "ClassRoom" value
 * @method Level               getLevel()         Returns the current record's "Level" value
 * @method Schedule            getSchedule()      Returns the current record's "Schedule" value
 * @method User                getUser()          Returns the current record's "User" value
 * @method Doctrine_Collection getInscription()   Returns the current record's "Inscription" collection
 * @method Course              setId()            Sets the current record's "id" value
 * @method Course              setLevelId()       Sets the current record's "level_id" value
 * @method Course              setUserId()        Sets the current record's "user_id" value
 * @method Course              setClassRoomId()   Sets the current record's "class_room_id" value
 * @method Course              setScheduleId()    Sets the current record's "schedule_id" value
 * @method Course              setCourseName()    Sets the current record's "course_name" value
 * @method Course              setIsActive()      Sets the current record's "is_active" value
 * @method Course              setClassRoom()     Sets the current record's "ClassRoom" value
 * @method Course              setLevel()         Sets the current record's "Level" value
 * @method Course              setSchedule()      Sets the current record's "Schedule" value
 * @method Course              setUser()          Sets the current record's "User" value
 * @method Course              setInscription()   Sets the current record's "Inscription" collection
 * 
 * @package    e4cc
 * @subpackage model
 * @author     jorgezfx@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCourse extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('course');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('level_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('class_room_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('schedule_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('course_name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ClassRoom', array(
             'local' => 'class_room_id',
             'foreign' => 'id'));

        $this->hasOne('Level', array(
             'local' => 'level_id',
             'foreign' => 'id'));

        $this->hasOne('Schedule', array(
             'local' => 'schedule_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Inscription', array(
             'local' => 'id',
             'foreign' => 'course_id'));
    }
}