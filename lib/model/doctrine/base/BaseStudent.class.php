<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Student', 'doctrine');

/**
 * BaseStudent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $person_id
 * @property integer $dui
 * @property timestamp $insertion_date
 * @property timestamp $confirmation_date
 * @property integer $is_active
 * @property Person $Person
 * @property Doctrine_Collection $Inscription
 * @property Doctrine_Collection $Link
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getPersonId()          Returns the current record's "person_id" value
 * @method integer             getDui()               Returns the current record's "dui" value
 * @method timestamp           getInsertionDate()     Returns the current record's "insertion_date" value
 * @method timestamp           getConfirmationDate()  Returns the current record's "confirmation_date" value
 * @method integer             getIsActive()          Returns the current record's "is_active" value
 * @method Person              getPerson()            Returns the current record's "Person" value
 * @method Doctrine_Collection getInscription()       Returns the current record's "Inscription" collection
 * @method Doctrine_Collection getLink()              Returns the current record's "Link" collection
 * @method Student             setId()                Sets the current record's "id" value
 * @method Student             setPersonId()          Sets the current record's "person_id" value
 * @method Student             setDui()               Sets the current record's "dui" value
 * @method Student             setInsertionDate()     Sets the current record's "insertion_date" value
 * @method Student             setConfirmationDate()  Sets the current record's "confirmation_date" value
 * @method Student             setIsActive()          Sets the current record's "is_active" value
 * @method Student             setPerson()            Sets the current record's "Person" value
 * @method Student             setInscription()       Sets the current record's "Inscription" collection
 * @method Student             setLink()              Sets the current record's "Link" collection
 * 
 * @package    e4cc
 * @subpackage model
 * @author     jorgezfx@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStudent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('student');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('person_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('dui', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('insertion_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('confirmation_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Person', array(
             'local' => 'person_id',
             'foreign' => 'id'));

        $this->hasMany('Inscription', array(
             'local' => 'id',
             'foreign' => 'student_id'));

        $this->hasMany('Link', array(
             'local' => 'id',
             'foreign' => 'student_id'));
    }
}